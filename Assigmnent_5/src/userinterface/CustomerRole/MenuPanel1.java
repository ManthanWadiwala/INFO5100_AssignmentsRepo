/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Restaurant.Dishes;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author manthanwadiwala
 */
public class MenuPanel1 extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    double sum=0;
    
    private UserAccount userAccount;
    Restaurant restro;
    EcoSystem system;
    ArrayList<Dishes> items=new ArrayList<Dishes>();
    /**
     * Creates new form RequestLabTestJPanel
     */
    public MenuPanel1(JPanel userProcessContainer, UserAccount account,EcoSystem system,Restaurant restro) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.restro=restro;
        this.system=system;
        this.userAccount = account;
        populateTable();
        valueLabel.setText(restro.getName());
        totalAmtLabel.setText("0");
       
    }
     public void populateTable(){
            DefaultTableModel model = (DefaultTableModel) menuTable.getModel();
        
            model.setRowCount(0);
                Object[] row = new Object[3];
                for(Dishes dish:restro.getMenu()){
                     row[0] = dish;
                     row[1] = dish.getDescription();
                     row[2] = dish.getPrice();
                     model.addRow(row);
                }  
    }
     
     public void populateCart(Dishes item){
        DefaultTableModel model = (DefaultTableModel) cartTable.getModel();
        model.setRowCount(0);
        ArrayList<Double> a1 = new ArrayList<Double>(); 
        
         items.add(item);
         Object[] row = new Object[3];
                for(Dishes dish:items){
                     row[0] = dish.getName();
                     row[1] = dish.getDescription();
                     row[2] = dish.getPrice();
                     a1.add(Double.parseDouble(dish.getPrice()));
                    
                     model.addRow(row);
                }
         
         populateTotal(a1);
         //return sum;
         
       
     }

       public void populateTotal(ArrayList<Double> a1)
       {
           sum=0;
           for(int i = 0; i < a1.size(); i++){
            System.out.println(a1.get(i));
            sum += a1.get(i);
         }
           totalAmtLabel.setText(Double.toString(sum));
       }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardBtn = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();
        orderBtn1 = new javax.swing.JButton();
        RemoveBtn = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();
        totalAmtLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        enterpriseLabel2 = new javax.swing.JLabel();
        commentsTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cardBtn.setBackground(new java.awt.Color(8, 34, 137));
        cardBtn.setForeground(new java.awt.Color(255, 255, 255));
        cardBtn.setText("Add Items");
        cardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardBtnActionPerformed(evt);
            }
        });
        add(cardBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 120, -1));

        backJButton.setBackground(new java.awt.Color(8, 34, 137));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        valueLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 230, 50));

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Description", "Amount ($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cartTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, -1, 100));

        menuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Description", "Amount ($)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(menuTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, -1, 100));

        orderBtn1.setBackground(new java.awt.Color(8, 34, 137));
        orderBtn1.setForeground(new java.awt.Color(255, 255, 255));
        orderBtn1.setText("Place Order");
        orderBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtn1ActionPerformed(evt);
            }
        });
        add(orderBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 610, -1, -1));

        RemoveBtn.setBackground(new java.awt.Color(8, 34, 137));
        RemoveBtn.setForeground(new java.awt.Color(255, 255, 255));
        RemoveBtn.setText("Remove Items");
        RemoveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveBtnActionPerformed(evt);
            }
        });
        add(RemoveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 340, 120, -1));

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("Your Cart");
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, 90, 30));

        totalAmtLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        totalAmtLabel.setText("jLabel1");
        add(totalAmtLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 490, -1, -1));

        jLabel1.setText("Comments:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 550, -1, 30));

        enterpriseLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel2.setText("Place an Order:");
        add(enterpriseLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 160, 30));
        add(commentsTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, 240, 30));

        jLabel2.setText("Order Total ($) :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 490, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardBtnActionPerformed
        
        
        int selectedRow = menuTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please select a row");
        }
        else{
            Dishes item=(Dishes)menuTable.getValueAt(selectedRow, 0);
            
            populateCart(item);
          
        }
        
        
        
    }//GEN-LAST:event_cardBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerAreaJPanel1 dwjp = (CustomerAreaJPanel1) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void orderBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtn1ActionPerformed
        // TODO add your handling code here:
        //String address=addressTxt.getText();
        int count = cartTable.getModel().getRowCount(); 
        System.out.println(count);
        if(count == 0)
        {
            JOptionPane.showMessageDialog(this,"Please add items to cart!.");
        }
        else
        {
            for(Customer cust:system.getCustomerDirectory().getCustList()){
            if(userAccount.getUsername().equals(cust.getUserName())){
                String address=cust.getAddress();
                String contact=cust.getNumber();
                String comments=commentsTxt.getText();
                int orderId= (int) ((new Date().getTime() / 1000L) % Integer.MAX_VALUE);
                cust.addOrder(orderId, restro.getName(), userAccount.getUsername(), null, items, String.valueOf(sum) , address,contact,comments);
                restro.addOrder(orderId, restro.getName(), userAccount.getUsername(), null, items, String.valueOf(sum) , address,contact,comments);
                JOptionPane.showMessageDialog(this,"Order Placed Successfully!.");
            }
        }
        }
        
        
        
    }//GEN-LAST:event_orderBtn1ActionPerformed

    private void RemoveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveBtnActionPerformed
        // TODO add your handling code here:
         int selectedRow = cartTable.getSelectedRow();
         System.out.println(selectedRow);
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete");
        }
        else{
            Dishes item=(Dishes)cartTable.getValueAt(selectedRow, 0);
            items.remove(item);
            DefaultTableModel model = (DefaultTableModel) cartTable.getModel();
        model.setRowCount(0);
            Object[] row = new Object[3];
                for(Dishes dish:items){
                     row[0] = dish;
                     row[1] = dish.getDescription();
                     row[2] = dish.getPrice();
                     model.addRow(row);
                } 
          
        }
        
    }//GEN-LAST:event_RemoveBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RemoveBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton cardBtn;
    private javax.swing.JTable cartTable;
    private javax.swing.JTextField commentsTxt;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel enterpriseLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable menuTable;
    private javax.swing.JButton orderBtn1;
    private javax.swing.JLabel totalAmtLabel;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
